'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStepKeywordType = getStepKeywordType;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _gherkin = require('gherkin');

var _gherkin2 = _interopRequireDefault(_gherkin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var types = {
  EVENT: 'event',
  OUTCOME: 'outcome',
  PRECONDITION: 'precondition'
};

exports.default = types;
function getStepKeywordType(_ref) {
  var language = _ref.language,
      previousStep = _ref.previousStep,
      step = _ref.step;

  var dialect = _gherkin2.default.DIALECTS[language];
  var type = _lodash2.default.find(['given', 'when', 'then', 'and', 'but'], function (keyword) {
    return _lodash2.default.includes(dialect[keyword], step.keyword);
  });
  switch (type) {
    case 'when':
      return types.EVENT;
    case 'then':
      return types.OUTCOME;
    case 'and':
    case 'but':
      if (previousStep) {
        return previousStep.keywordType;
      }
    // fallthrough
    default:
      return types.PRECONDITION;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9rZXl3b3JkX3R5cGUuanMiXSwibmFtZXMiOlsiZ2V0U3RlcEtleXdvcmRUeXBlIiwidHlwZXMiLCJFVkVOVCIsIk9VVENPTUUiLCJQUkVDT05ESVRJT04iLCJsYW5ndWFnZSIsInByZXZpb3VzU3RlcCIsInN0ZXAiLCJkaWFsZWN0IiwiRElBTEVDVFMiLCJ0eXBlIiwiZmluZCIsImluY2x1ZGVzIiwia2V5d29yZCIsImtleXdvcmRUeXBlIl0sIm1hcHBpbmdzIjoiOzs7OztRQVdnQkEsa0IsR0FBQUEsa0I7O0FBWGhCOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1DLFFBQVE7QUFDWkMsU0FBTyxPQURLO0FBRVpDLFdBQVMsU0FGRztBQUdaQyxnQkFBYztBQUhGLENBQWQ7O2tCQU1lSCxLO0FBRVIsU0FBU0Qsa0JBQVQsT0FBOEQ7QUFBQSxNQUFoQ0ssUUFBZ0MsUUFBaENBLFFBQWdDO0FBQUEsTUFBdEJDLFlBQXNCLFFBQXRCQSxZQUFzQjtBQUFBLE1BQVJDLElBQVEsUUFBUkEsSUFBUTs7QUFDbkUsTUFBTUMsVUFBVSxrQkFBUUMsUUFBUixDQUFpQkosUUFBakIsQ0FBaEI7QUFDQSxNQUFNSyxPQUFPLGlCQUFFQyxJQUFGLENBQU8sQ0FBQyxPQUFELEVBQVUsTUFBVixFQUFrQixNQUFsQixFQUEwQixLQUExQixFQUFpQyxLQUFqQyxDQUFQLEVBQWdELG1CQUFXO0FBQ3RFLFdBQU8saUJBQUVDLFFBQUYsQ0FBV0osUUFBUUssT0FBUixDQUFYLEVBQTZCTixLQUFLTSxPQUFsQyxDQUFQO0FBQ0QsR0FGWSxDQUFiO0FBR0EsVUFBUUgsSUFBUjtBQUNFLFNBQUssTUFBTDtBQUNFLGFBQU9ULE1BQU1DLEtBQWI7QUFDRixTQUFLLE1BQUw7QUFDRSxhQUFPRCxNQUFNRSxPQUFiO0FBQ0YsU0FBSyxLQUFMO0FBQ0EsU0FBSyxLQUFMO0FBQ0UsVUFBSUcsWUFBSixFQUFrQjtBQUNoQixlQUFPQSxhQUFhUSxXQUFwQjtBQUNEO0FBQ0g7QUFDQTtBQUNFLGFBQU9iLE1BQU1HLFlBQWI7QUFaSjtBQWNEIiwiZmlsZSI6ImtleXdvcmRfdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCdcbmltcG9ydCBHaGVya2luIGZyb20gJ2doZXJraW4nXG5cbmNvbnN0IHR5cGVzID0ge1xuICBFVkVOVDogJ2V2ZW50JyxcbiAgT1VUQ09NRTogJ291dGNvbWUnLFxuICBQUkVDT05ESVRJT046ICdwcmVjb25kaXRpb24nXG59XG5cbmV4cG9ydCBkZWZhdWx0IHR5cGVzXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdGVwS2V5d29yZFR5cGUoeyBsYW5ndWFnZSwgcHJldmlvdXNTdGVwLCBzdGVwIH0pIHtcbiAgY29uc3QgZGlhbGVjdCA9IEdoZXJraW4uRElBTEVDVFNbbGFuZ3VhZ2VdXG4gIGNvbnN0IHR5cGUgPSBfLmZpbmQoWydnaXZlbicsICd3aGVuJywgJ3RoZW4nLCAnYW5kJywgJ2J1dCddLCBrZXl3b3JkID0+IHtcbiAgICByZXR1cm4gXy5pbmNsdWRlcyhkaWFsZWN0W2tleXdvcmRdLCBzdGVwLmtleXdvcmQpXG4gIH0pXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ3doZW4nOlxuICAgICAgcmV0dXJuIHR5cGVzLkVWRU5UXG4gICAgY2FzZSAndGhlbic6XG4gICAgICByZXR1cm4gdHlwZXMuT1VUQ09NRVxuICAgIGNhc2UgJ2FuZCc6XG4gICAgY2FzZSAnYnV0JzpcbiAgICAgIGlmIChwcmV2aW91c1N0ZXApIHtcbiAgICAgICAgcmV0dXJuIHByZXZpb3VzU3RlcC5rZXl3b3JkVHlwZVxuICAgICAgfVxuICAgIC8vIGZhbGx0aHJvdWdoXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB0eXBlcy5QUkVDT05ESVRJT05cbiAgfVxufVxuIl19